* Name
Newplot : An easy to use gnuplot-based plotting backend for Python

* Description
Newplot is a Python package that intends to be an easy to use and reliable
wrapper around the Gnuplot software. It provides a 2-way low-level 
communication api with Gnuplot and a higher level api for common use-cases.

* Installation
** From the sources
*** Requirements
    - Git
    - Python (tested on 2.7 and 3.6, Linux 4.14)
    - Pip
    - GNU make
    - Gnuplot (tested on 5.2 patchlevel 2)

*** Downloading
    #+BEGIN_SRC bash
    git clone https://github.com/drakk3/newplot.git newplot
    #+END_SRC

*** Installing
    #+BEGIN_SRC bash
    cd newplot
    make install --user
   #+END_SRC

* Usage

#+BEGIN_SRC python

import newplot

with newplot.Gnuplot(defaultTimeout=1) as gp:
    
    # The output of Gnuplot is accessible in Python 
    print(gp.version)
    
    # Defining Gnuplot user variable from Python
    gp.c = 2

    # Defining Gnuplot user function from Python
    gp.f = gp.function(['x'], '2*x**2 + x + c')

    # Function and variables are evaluable inside the Python interpreter
    print(gp.f(5) + gp.c)

    # Defining a new Gnuplot figure    
    fig1 = gp.Figure(title="My first awesome figure",
                     term='qt')
    
    # Plotting
    fig1.plot('f(x)', _with='linespoints')

    # Plotting another curve on the same figure
    fig1.plot('tan(x)', sampling_range='[-pi:pi]')

    # Defining another figure, term is inferred from the default terminal 
    fig2 = gp.Figure(title="Another awesome figure !")
    
    # Defining a 2 variables function
    gp.g = gp.function(['u', 'v'], ('cos(u)', 'sin(v)'))

    # 3D plotting
    fig2.splot(gp.g['x', 'y'], _with='pm3d')

    # Rendering is done only when `submit` is called
    fig1.submit()

    # Newplot can wait for the user to close a window
    fig2.submit(wait=True)

#+END_SRC
* Backlog
#+TODO: TODO DOING FEEDBACK VERIFY | DONE CANCELED
*** DOING Provide a consistent API to pass Python datas
    - [X] Variables and functions
    - [-] Tabulated functions
    - [-] Arrays (Numpy compatible)
      + [-] As Gnuplot Data blocks
      + [-] As Gnuplot arrays 
*** FEEDBACK Provide a consitent API to style each plot
    - [X] Per plot styling
    - [X] Global figure styling
*** TODO Enable the use of multiplot
*** TODO Enable the use of fit
*** TODO Provide a consistent API to stream datas in real-time
   
* Author
Romain CHÂTEL <rchastel@protonmail.com>

* Licence
Copyright (C) 2017-2018 Romain CHÂTEL <rchastel@protonmail.com>
This file is part of Newplot.

Newplot is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Newplot is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Newplot.  If not, see <http://www.gnu.org/licenses/>.
